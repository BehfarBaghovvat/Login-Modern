<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="usernamePictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABIJJREFUeF7t
        nUmIHVUUhjsORDERIiLGSMBgFoI7hYgTikkMAcUBQREXIkg2DpBNRMUJXLhyImJ0o8QgURwiiCBKxCGa
        hYKLIIIECThAVAgKzu136v4NLvp1uqvrVt337v/Bv2vuOfU1r+q9W1X3ThljjDHGGGOMWRjT09NLyAqy
        hpxHziVnkBP0JyYniF5FtpAXyOfkdzKKr8kOcgM5XkOYxYLMYyR1H/mXtOFbsllDmrYg8SJyIIx2wD/k
        Fg1tFgLi4trwMPmbdMlv5GlyMzlN5cxcICr+GdtJbuL68zw5U6XNbCBoW9jqkcPE15fZQMw68ldY6pk/
        yHq1YWZAyoeNnmH4mfi6MgMyrmi0DMsOtWOQsTM5GZQ4dZ2qluoFCUvJr2GkALaorXpBwoXJRRG8rLbq
        BQl3JxdFcFBt1QsS4tdzKcTsQN2TkQh4o1FRDnX/ekfA3uShGNaqtTpBwEfJQzGco9bqBAEfJw/FcJZa
        qxMEvJM8FMMKtVYnCNidPBTBEbVVL0h4Mrkogi/VVr0gYWtyUQRvqa16QcI1yUURPKa26gUJq5OLIrhe
        bdUNIr5LPgbH99gDROxJPgblkNoxyLgvORkU3zGcARkbk5NBuVbtGGQ8k5wMyna1UzeI2JR8FMGVaqte
        kPBcclEEvo4g4fXkogheU1v1goQSHgGaYafaqhck3JNcFME2tVUvSLgguSiCdWqrXpAQryB09WLOYoge
        lqitukFE/DD8M6wMRNTeqHZMgJAN5LOw0zOfkg1qw/wfxKxsFPXL6SpvZgNBPyRPvfCjyppRIOml5KoX
        dqmsGQWSrk6ueuE6lTWjQNKx5GCjKy9xavQqD/MBUfc2yvLyqMqZo4Gsk0nO++xHyEqVM/MBYbc26vKw
        VWXMfEFaTKnkeO53P/G1ow2IW04+CYsd8RXx++iLAYFPNSq7wTegFgsSu3wY+1UNa9qCxCeSy054RcOa
        tiDx8eSyE3ZrWNMWJD6bXHbCHg1r2oLELicb39ewpi1IfDO57IT9Gta0BYnvJZedcEDDmjYg8BTyS6Oy
        G2IJpjUa3iwU5OV4IdTftNqAuFjFOhcPqIw5GsiKG1QPkVj8OCfxg3OpyprZQFAsqt/n2idfkEtU3syA
        lPPJLpL7UzGKWCLqYrVTJwiIhfavIu+SUohdF24nJ6rNyYeDjT0+7ieHSKl8Tx4hq9X2ZMGBxadhPYmF
        ZoZ8hnehxCk0PsGxZcZxOpzxhYNYRu4k35BxJ/YhiXVZluvwxgeaPonEaeknMmnEzMGDZJkOt1xoMh5M
        uI3EOXjSiQft4gtAme+U0FgsIlPSN6a+iE0EzpaGMqChy0jsMFArcRq7XDqGhUZuJHPtmFYLMZN8k7QM
        Aw1cqkZMIjakGWZzGAqvJTWfpkYRTvq/plC0tOVdS+JtaeoHCm5Odc0cbJKu/FDsg1TTzMFe6coLheJN
        2aGmyceJcLRK2vJBkbuacmY+3CFt+aBISav3lM6L0pYPigyx2sK4sk/a8kGRSZzBzcVhaTPGGGOMMcYY
        Y8wYMTX1H/MQ9KMjkkUiAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 17</value>
  </metadata>
</root>